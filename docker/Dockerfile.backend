# The MIT License (MIT)
# 
# Copyright (c) 2021, NVIDIA CORPORATION. All rights reserved.
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

ARG BASE_IMAGE_VERSION
FROM nvcr.io/nvidia/tensorrt:${BASE_IMAGE_VERSION}-py3

ARG CMAKE_UBUNTU_VERSION=20.04
ARG BUILD_TYPE=Release

# Ensure apt-get won't prompt for selecting options
ENV DEBIAN_FRONTEND=noninteractive

RUN echo "Building ${BUILD_TYPE} version of ORT."

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
            ca-certificates \
            software-properties-common \
            autoconf \
            automake \
            build-essential \
            curl \
            git \
            libb64-dev \
            libopencv-dev \
            libopencv-core-dev \
            libssl-dev \
            libtool \
            pkg-config \
            python3 \
            python3-pip \
            python3-dev \
            rapidjson-dev \
            vim \
            gdb \
            wget && \
		pip3 install --upgrade pip && \
    pip3 install --upgrade wheel setuptools && \
    pip3 install --upgrade grpcio-tools flatbuffers packaging


# Remove older cmake
RUN rm -f /usr/local/bin/cmake

# Client build requires recent version of CMake (FetchContent required)
RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | \
      gpg --dearmor - |  \
      tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null && \
    apt-add-repository "deb https://apt.kitware.com/ubuntu/ $(. /etc/os-release; echo ${VERSION_CODENAME/*, /}) main" && \
    apt-get update && \
    apt-get install -y --no-install-recommends cmake; \
    cmake --version

# Build expects "python" executable (not python3).
RUN rm -f /usr/bin/python && \
    ln -s /usr/bin/python3 /usr/bin/python


# Workspace dir
WORKDIR /workspace

# Add TRT 8.6 tar
ADD ./TensorRT-8.6.1.6.Linux.x86_64-gnu.cuda-11.8.tar.gz /workspace/

# Clone ONNXRT release branch
RUN git clone --branch rel-1.16.1  https://github.com/microsoft/onnxruntime.git && cd /workspace/onnxruntime && git checkout 2a1fd2586ff9ea7b2af94a7d4b1b3c124f5f3cda
RUN cd /workspace/onnxruntime && git cherry-pick -n 28c1944561cbd21256368943e452ac304fb8f582

# initialize the submodules in case we need any customizations
RUN cd /workspace/onnxruntime && git submodule sync --recursive && git submodule update --init --recursive

# Build the ONNXRT
RUN cd /workspace/onnxruntime && ./build.sh --allow_running_as_root --use_cuda --cuda_home /usr/local/cuda-11.8/ --cuda_version 11.8 --cudnn_home /usr/lib/x86_64-linux-gnu/ --use_tensorrt --tensorrt_home /workspace/TensorRT-8.6.1.6 --parallel 8 --build_shared_lib --config ${BUILD_TYPE} --skip_tests --skip_submodule_sync --build_wheel --use_tensorrt_builtin_parser --disable_contrib_ops

# Go to the build directory and perform the install step
RUN cd /workspace/onnxruntime/build/Linux/${BUILD_TYPE} && cmake -DCMAKE_INSTALL_PREFIX=/workspace/onnxruntime/install -P cmake_install.cmake
